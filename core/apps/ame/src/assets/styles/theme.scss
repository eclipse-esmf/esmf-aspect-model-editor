/*!
 * Copyright (c) 2023 Robert Bosch Manufacturing Solutions GmbH
 *
 * See the AUTHORS file(s) distributed with this work for
 * additional information regarding authorship.
 *
 * This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at https://mozilla.org/MPL/2.0/.
 *
 * SPDX-License-Identifier: MPL-2.0
 */

@use '@angular/material' as mat;

@include mat.core();
@include mat.strong-focus-indicators();

$ame-colors: (
  primary: var(--ame-primary),
  accent: var(--ame-accent),
  warn: var(--ame-error),
);

$ame-primary-light: (
  50: map-get($ame-colors, primary),
  100: map-get($ame-colors, primary),
  200: map-get($ame-colors, primary),
  300: map-get($ame-colors, primary),
  400: map-get($ame-colors, primary),
  500: map-get($ame-colors, primary),
  600: map-get($ame-colors, primary),
  700: map-get($ame-colors, primary),
  800: map-get($ame-colors, primary),
  900: map-get($ame-colors, primary),
  A100: map-get($ame-colors, primary),
  A200: map-get($ame-colors, primary),
  A400: map-get($ame-colors, primary),
  A700: map-get($ame-colors, primary),
  contrast: (
    50: var(--ame-font),
    100: var(--ame-font),
    200: var(--ame-font),
    300: var(--ame-font),
    400: var(--ame-font),
    500: var(--ame-font),
    600: var(--ame-font),
    700: var(--ame-font),
    800: var(--ame-font),
    900: var(--ame-font),
    A100: var(--ame-font),
    A200: var(--ame-font),
    A400: var(--ame-font),
    A700: var(--ame-font),
  ),
);

$ame-accent-light: (
  50: map-get($ame-colors, accent),
  100: map-get($ame-colors, accent),
  200: map-get($ame-colors, accent),
  300: map-get($ame-colors, accent),
  400: map-get($ame-colors, accent),
  500: map-get($ame-colors, accent),
  600: map-get($ame-colors, accent),
  700: map-get($ame-colors, accent),
  800: map-get($ame-colors, accent),
  900: map-get($ame-colors, accent),
  A100: map-get($ame-colors, accent),
  A200: map-get($ame-colors, accent),
  A400: map-get($ame-colors, accent),
  A700: map-get($ame-colors, accent),
  contrast: (
    50: var(--ame-font),
    100: var(--ame-font),
    200: var(--ame-font),
    300: var(--ame-font),
    400: var(--ame-font),
    500: var(--ame-font),
    600: var(--ame-font),
    700: var(--ame-font),
    800: var(--ame-font),
    900: var(--ame-font),
    A100: var(--ame-font),
    A200: var(--ame-font),
    A400: var(--ame-font),
    A700: var(--ame-font),
  ),
);

$ame-warn-light: (
  50: map-get($ame-colors, warn),
  100: map-get($ame-colors, warn),
  200: map-get($ame-colors, warn),
  300: map-get($ame-colors, warn),
  400: map-get($ame-colors, warn),
  500: map-get($ame-colors, warn),
  600: map-get($ame-colors, warn),
  700: map-get($ame-colors, warn),
  800: map-get($ame-colors, warn),
  900: map-get($ame-colors, warn),
  A100: map-get($ame-colors, warn),
  A200: map-get($ame-colors, warn),
  A400: map-get($ame-colors, warn),
  A700: map-get($ame-colors, warn),
  contrast: (
    50: white,
    100: white,
    200: white,
    300: white,
    400: white,
    500: white,
    600: white,
    700: white,
    800: white,
    900: white,
    A100: white,
    A200: white,
    A400: white,
    A700: white,
  ),
);

$ame-light-theme: mat.define-light-theme(
  (
    color: (
      primary: mat.define-palette($ame-primary-light),
      accent: mat.define-palette($ame-accent-light),
      warn: mat.define-palette($ame-warn-light),
    ),
  )
);

@include mat.all-component-themes($ame-light-theme);
